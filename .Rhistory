library(data.table)
raw_input <- fread("inputs/raw_input.csv")
holidays <- fread("inputs/holidays.csv")
library(data.table)
raw_input <- fread("inputs/raw_input.csv")
holidays <- fread("inputs/holidays.csv")
# check first five rows of the raw_input table
head(raw_input, 5)
# review the holidays data
head(holidays, 5)
# necessary libraries
library(data.table)
library(dplyr)
library(ISOweek)
library(fasttime)
library(lme4)
library(r2mlm)
library(performance)
library(Boruta)
library(MLmetrics)
library(rlang)
library(tidyverse)
library(plotly)
# library(staTools)
library(smooth)
library(plotrix)
library(data.table)
library(dplyr)
library(ISOweek)
library(fasttime)
library(lme4)
library(r2mlm)
library(performance)
library(Boruta)
library(MLmetrics)
library(rlang)
library(tidyverse)
library(plotly)
# library(staTools)
library(smooth)
library(plotrix)
# check first five rows of the raw_input table
head(raw_input, 5)
# read data
raw_input <- fread("inputs/raw_input.csv")
# delate NA`s from initial data
copy <- copy(na.omit(raw_input))
# some data manipulation
copy[, cat_subcat := paste(copy$cat, copy$subcat)]
# EDA
boxplot(copy$value)
boxplot(copy$volume)
boxplot(copy$units)
boxplot(copy$promo)
# analysis for number of observations grouped by cat
for_test_w <- copy[,
.N,
by=.(cat),
][order(-N)]
ggplot(for_test_w, aes(x="", y=N, fill=cat))+
geom_bar(width = 1, stat = "identity")
ggplot(for_test_w, aes(x="", y=N, fill=cat))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0)
# analysis for the sum of promo grouped by cat
for_test_a <- copy[,
lapply(.SD, sum),
by=.(cat),
.SDcols=c("promo"),
][order(-promo)]
ggplot(for_test_a, aes(x="", y=promo, fill=cat))+
geom_bar(width = 1, stat = "identity")
ggplot(for_test_a, aes(x="", y=promo, fill=cat))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0)
# analysis difference between similar subcat but same cat
copy[,
lapply(.SD, sum),
by=.(cat),
.SDcols=c("promo"),
][order(-promo)]
copy[,
.N,
by=.(subcat),
]
copy[,
.N,
by=.(cat, subcat),
]
# analysis for the sum of volume grouped by cat
test <- copy[,
lapply(.SD, sum),
by=.(cat),
.SDcols=c("volume"),
][order(-volume)]
ggplot(test, aes(x="", y=volume, fill=cat))+
geom_bar(width = 1, stat = "identity")
ggplot(test, aes(x="", y=volume, fill=cat))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0)
# analysis for the sum of value grouped by cat
test <- copy[,
lapply(.SD, sum),
by=.(cat),
.SDcols=c("value"),
][order(-value)]
ggplot(test, aes(x="", y=value, fill=cat))+
geom_bar(width = 1, stat = "identity")
ggplot(test, aes(x="", y=value, fill=cat))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0)
# analysis for the sum of units grouped by cat
test <- copy[,
lapply(.SD, sum),
by=.(cat),
.SDcols=c("units"),
][order(-units)]
ggplot(test, aes(x="", y=units, fill=cat))+
geom_bar(width = 1, stat = "identity")
ggplot(test, aes(x="", y=units, fill=cat))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0)
# * ```year_week``` in the ``` yyyyww``` format (e.g., 202051, 201836)
copy[, year := gsub(" ", "", paste('20', substr(copy$date,5,6)))]
copy[, week := substr(copy$date,2,3)]
copy[, year_week := gsub(" ", "", paste(year, week))]
# * ```month``` in the ```%b``` (```MTH```) format (JAN, DEC, etc.)
# * ```full_date``` in the ```%Y-%m-%d```	(```yyyy-mm-dd```) format (e.g., 2017-02-05) # done on the previous step
# **_Be careful with week #53 and note that Saturday, Sunday, Thursday or Monday can be used as the first day of the week_**.
copy[, specific_year_week2 := paste(copy$year, copy$week, sep = "-") ]
copy[, specific_year_week3 := sub("(\\d{4}-)(\\d{2})", "\\1W\\2-1", specific_year_week2)]
copy[, final_date := ISOweek2date(specific_year_week3)]
Sys.setlocale(category = "LC_TIME", locale="en_GB.UTF-8")
copy[, month := toupper(format(final_date, "%b",locale = locale("en")) )]
copy[, c("specific_year_week2", "specific_year_week3"):=NULL]
# 4. **Process holidays**:
holidays <- fread("inputs/holidays.csv")
holidays[,prexms := as.Date(prexms, "%d%B%Y")]
# it seems that when was initialization there were some problems with the timezone (but I solved it)
copy[, final_date_minus_one := as.Date(final_date)-1]
Sys.setlocale("LC_TIME", "C")
holidays[,prexms := as.Date(prexms, "%d%b%Y")]
holidays[,xms := as.Date(xms, "%d%b%Y")]
holidays[,easter := as.Date(easter, "%d%b%Y")]
holidays[,halloween := as.Date(halloween, "%d%b%Y")]
holidays[,newyear := as.Date(newyear, "%d%b%Y")]
holidays[,valentine := as.Date(valentine, "%d%b%Y")]
copy[, prexms := ifelse(copy$final_date_minus_one %in% holidays$prexms, 1, 0)]
copy[, xms := ifelse(copy$final_date_minus_one %in% holidays$xms, 1, 0)]
copy[, easter := ifelse(copy$final_date_minus_one %in% holidays$easter, 1, 0)]
copy[, halloween := ifelse(copy$final_date_minus_one %in% holidays$halloween, 1, 0)]
copy[, newyear := ifelse(copy$final_date_minus_one %in% holidays$newyear, 1, 0)]
copy[, valentine := ifelse(copy$final_date_minus_one %in% holidays$valentine, 1, 0)]
copy[, full_date := final_date_minus_one]
copy[, c("final_date_minus_one","final_date"):=NULL]
# copy[, cat_subcat := paste(copy$cat, copy$subcat)] # already done
setcolorder(copy, c('cat', 'subcat', 'cat_subcat','promo','date', 'year', 'week', 'year_week', 'month','full_date', 'prexms', 'xms', 'easter', 'halloween', 'newyear', 'valentine'))
copy[, price := value/volume]
copy[, price := ifelse(is.infinite(copy$price), 0, copy$price)]
#boxplot(copy$price)
copy <- copy[price>0]
boxplot(copy$price)
copy[, price_var := var(price), by = .(copy$cat_subcat)]
#boxplot(copy$price_var)
#summary(copy)
#nrow(copy)
whithout_var_cuting_copy <- copy(copy)
#nrow(copy[price_var<2.01])
copy <- copy[price_var<2.01]
boxplot(copy$price_var)
summary(copy)
copy[, log_price := log10(copy$price)]
copy[, log_price := ifelse(copy$log_price == 0, 0.01, copy$log_price)]
boxplot(copy$log_price)
summary(copy)
copy[, avg_volume := mean(volume), by = .(copy$cat_subcat)]
copy[, log_volume := log10(copy$volume)]
#boxplot(copy$log_volume)
#summary(copy)
copy[, log_volume := ifelse(copy$log_volume==0, 0.01, copy$log_volume)]
#boxplot(copy$log_volume)
#summary(copy)
#nrow(copy[is.finite(copy$log_volume)])
#summary(copy[is.finite(copy$log_volume)])
copy <- copy[is.finite(copy$log_volume)]
with_var_but_wthout_week <- copy(copy)
copy[, week:= as.numeric(week)]
## Calculate the number of observations for conditions
#nrow(copy[week > 29])
copy <- copy[week > 29]
copy[, total_value := sum(value), by = .(copy$subcat,copy$year_week) ]
copy[, total_volume := sum(volume), by = .(copy$subcat,copy$year_week) ]
#summary(copy)
#boxplot(copy)
# possible culations (option 1)
#copy[, cpi := ((total_value/total_volume))]
# possible culations (option 2)
#copy[, cpi := ((total_value/total_volume)/price)]
# possible culations (final option)
copy[, cpi := (((total_value-value)/(total_volume-volume))/price)]
boxplot(copy$cpi)
copy[, log_cpi := ifelse(copy$cpi>0.01, log(copy$cpi), NA)]
#boxplot(copy$log_cpi)
copy[, log_cpi := (ifelse(copy$cpi == 0, log(0.01), log_cpi))]
boxplot(copy$log_cpi)
copy[, log_cpi := (ifelse(is.na(copy$cpi), 0, log_cpi))]
boxplot(copy$log_cpi)
reserve <- copy(copy)
# Dataset preparation
copy[, log_units:=log(units)]
# boxplot(copy$log_units)
copy <- copy(copy[, c('cat',	'subcat', 'value',	'volume',	'units', 'log_units','promo',	'year',	'week',	'month', 'avg_volume',	'price',	'price_var', 'log_price',	'log_volume',	'total_value',	'total_volume',	'cpi', 'log_cpi', 'prexms', 'xms', 'easter',	'halloween',	'newyear',	'valentine')])
copy[, c("cpi"):=NULL]
plot_ly(x=copy$price, y=copy$volume, z=copy$cat, type="scatter3d", mode="markers", color=copy$promo)
# with logarithmic values in 'price' column and 'volume' column
plot_ly(x=copy$log_volume, y=copy$log_price, z=copy$cat, type="scatter3d", mode="markers", color=copy$promo)
# I added all variables from feature selection which are highly important for log_price
first1 <- lm(formula = log_volume ~ log_units + log_price + cat + subcat + promo + log_cpi + year + week + month + xms + halloween, data = copy)
# I delete seasonality.
second2 <- lm(formula = log_volume ~ log_units + log_price + cat + subcat + promo + log_cpi +  xms + halloween + (prexms*xms*newyear) , data = copy)
# I added interaction term prexms*xms*newyear.
third3 <-lm(formula = log_volume ~ log_units + log_price + cat + subcat + promo + log_cpi + year + week + month + xms + halloween + (prexms*xms*newyear) , data = copy)
# summary analysis
summary(first1)
summary(second2)
summary(third3)
# plot analysis
plot(first1)
plot(second2)
plot(third3)
# rsq
# (sum((mod$fitted.values - mean(copy$log_volume))^2))/(sum((copy$log_volume - mean(copy$log_volume))^2))
summary(first1)$r.squared
summary(second2)$r.squared
summary(third3)$r.squared
# rss
# sum((copy$log_volume - third3$fitted.values)^2)
anova(first1)["Residuals", "Sum Sq"]
anova(second2)["Residuals", "Sum Sq"]
anova(third3)["Residuals", "Sum Sq"]
# tss
sum((copy$log_volume - mean(copy$log_volume))^2)
# mpe
MPE(first1$fitted.values, copy$log_volume)
MPE(second2$fitted.values, copy$log_volume)
MPE(third3$fitted.values, copy$log_volume)
# mape
MAPE(first1$fitted.values, copy$log_volume)
MAPE(second2$fitted.values, copy$log_volume)
MAPE(third3$fitted.values, copy$log_volume)
# necessary libraries
library(data.table)
library(dplyr)
library(ISOweek)
library(fasttime)
library(lme4)
library(r2mlm)
library(performance)
library(Boruta)
library(MLmetrics)
library(rlang)
library(tidyverse)
library(plotly)
# library(staTools)
library(smooth)
library(plotrix)
# summary analysis
# summary(first1)
# summary(second2)
# summary(third3)
# plot analysis
# plot(first1)
# plot(second2)
# plot(third3)
summary(first1)
summary(second2)
summary(third3)
plot(first1)
plot(second2)
plot(third3)
